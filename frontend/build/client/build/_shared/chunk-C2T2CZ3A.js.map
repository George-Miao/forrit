{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/toggle-selection@1.0.6/node_modules/toggle-selection/index.js", "../../../node_modules/.pnpm/copy-to-clipboard@3.3.3/node_modules/copy-to-clipboard/index.js", "../../../node_modules/.pnpm/react-string-replace@1.1.1/node_modules/react-string-replace/index.js", "../../../node_modules/.pnpm/react-use-clipboard@1.0.9_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-use-clipboard/src/index.tsx", "../../../app/components/meta_preview.tsx", "../../../app/components/entry_list/item.tsx"],
  "sourcesContent": ["\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n", "\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"\u2318\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n", "/* eslint-disable vars-on-top, no-var, prefer-template */\nvar isRegExp = function (re) { \n  return re instanceof RegExp;\n};\nvar escapeRegExp = function escapeRegExp(string) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n};\nvar isString = function (value) {\n  return typeof value === 'string';\n};\nvar flatten = function (array) {\n  var newArray = [];\n\n  array.forEach(function (item) {\n    if (Array.isArray(item)) {\n      newArray = newArray.concat(item);\n    } else {\n      newArray.push(item);\n    }\n  });\n\n  return newArray;\n};\n\n/**\n * Given a string, replace every substring that is matched by the `match` regex\n * with the result of calling `fn` on matched substring. The result will be an\n * array with all odd indexed elements containing the replacements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * React will happily render an array as children of a react element, which\n * makes this approach very useful for tasks like surrounding certain text\n * within a string with react elements.\n *\n * Example:\n * matchReplace(\n *   'Emphasize all phone numbers like 884-555-4443.',\n *   /([\\d|-]+)/g,\n *   (number, i) => <strong key={i}>{number}</strong>\n * );\n * // => ['Emphasize all phone numbers like ', <strong>884-555-4443</strong>, '.'\n *\n * @param {string} str\n * @param {RegExp|str} match Must contain a matching group\n * @param {function} fn\n * @return {array}\n */\nfunction replaceString(str, match, fn) {\n  var curCharStart = 0;\n  var curCharLen = 0;\n\n  if (str === '') {\n    return str;\n  } else if (!str || !isString(str)) {\n    throw new TypeError('First argument to react-string-replace#replaceString must be a string');\n  }\n\n  var re = match;\n\n  if (!isRegExp(re)) {\n    re = new RegExp('(' + escapeRegExp(re) + ')', 'gi');\n  }\n\n  var result = str.split(re);\n\n  // Apply fn to all odd elements\n  for (var i = 1, length = result.length; i < length; i += 2) {\n    /** @see {@link https://github.com/iansinnott/react-string-replace/issues/74} */\n    if (result[i] === undefined || result[i - 1] === undefined) {\n      console.warn('reactStringReplace: Encountered undefined value during string replacement. Your RegExp may not be working the way you expect.');\n      continue;\n    }\n\n    curCharLen = result[i].length;\n    curCharStart += result[i - 1].length;\n    result[i] = fn(result[i], i, curCharStart);\n    curCharStart += curCharLen;\n  }\n\n  return result;\n}\n\nmodule.exports = function reactStringReplace(source, match, fn) {\n  if (!Array.isArray(source)) source = [source];\n\n  return flatten(source.map(function(x) {\n    return isString(x) ? replaceString(x, match, fn) : x;\n  }));\n};\n", "import { useState, useEffect } from \"react\";\nimport copy from \"copy-to-clipboard\";\n\ninterface IOptions {\n  /**\n   * Reset the status after a certain number of milliseconds. This is useful\n   * for showing a temporary success message.\n   */\n  successDuration?: number;\n}\n\nexport default function useClipboard(\n  text: string,\n  options?: IOptions\n): [boolean, () => void] {\n  const [isCopied, setIsCopied] = useState(false);\n  const successDuration = options && options.successDuration;\n\n  useEffect(() => {\n    if (isCopied && successDuration) {\n      const id = setTimeout(() => {\n        setIsCopied(false);\n      }, successDuration);\n\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [isCopied, successDuration]);\n\n  return [\n    isCopied,\n    () => {\n      const didCopy = copy(text);\n      setIsCopied(didCopy);\n    },\n  ];\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/meta_preview.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/meta_preview.tsx\");\n  import.meta.hot.lastModified = \"1726371181752.9646\";\n}\n// REMIX HMR END\n\nimport { Card } from '@douyinfe/semi-ui';\nimport { format_broadcast, parse_broadcast } from '../util';\nimport { useExtractedMeta } from 'app/client';\nimport Loading from './loading';\nexport default function MetaPreview({\n  id\n}) {\n  if (id) {\n    var _s = $RefreshSig$();\n    function useData() {\n      _s();\n      return useExtractedMeta(id);\n    }\n    _s(useData, \"1xvDvuGOeSjBKbUAvoPfpTx1OQ0=\", false, function () {\n      return [useExtractedMeta];\n    });\n    return <Loading useData={useData}>{meta => Loaded({\n        meta: meta\n      })}</Loading>;\n  }\n  return <Card>\u672A\u77E5</Card>;\n}\n_c = MetaPreview;\nconst width = 200;\nfunction Loaded({\n  meta\n}) {\n  const cover = meta.tv?.poster_path ? <a style={{\n    width: width,\n    height: width * 1.5\n  }} href={`/meta/${meta.id}`}>\n      <img style={{\n      width: '100%',\n      height: '100%'\n    }} alt='poster' src={`https://image.tmdb.org/t/p/original/${meta.tv.poster_path}`} />\n    </a> : null;\n  const interval = meta.broadcast ? parse_broadcast(meta.broadcast) : {};\n  return <Card cover={cover} style={{\n    maxWidth: width\n  }}>\n      <Card.Meta title={meta.title} description={format_broadcast(interval)} />\n    </Card>;\n}\n_c2 = Loaded;\nvar _c, _c2;\n$RefreshReg$(_c, \"MetaPreview\");\n$RefreshReg$(_c2, \"Loaded\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/entry_list/item.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/entry_list/item.tsx\");\n}\n// REMIX HMR END\n\nimport { Button, ButtonGroup, List, Popover, Space, Tooltip, Typography } from '@douyinfe/semi-ui';\nimport { format_time_relative, use_is_xs } from 'app/util';\nimport { IconCheckboxTick, IconCopy, IconDownload } from '@douyinfe/semi-icons';\nimport useClipboard from 'react-use-clipboard';\nimport MetaPreview from '../meta_preview';\nimport { useClient } from 'app/client';\nimport { useState } from 'react';\nimport \"./index.css?__remix_sideEffect__\";\nimport reactStringReplace from 'react-string-replace';\nconst {\n  Text\n} = Typography;\nexport default function EntryListItem({\n  item,\n  show_meta\n}) {\n  _s();\n  const [copied, copy] = useClipboard(item.torrent, {\n    successDuration: 1000\n  });\n  const [downloaded, setDownloaded] = useState(false);\n  const client = useClient();\n  const is_xs = use_is_xs();\n  const download = () => {\n    if (downloaded) return;\n    client.POST('/entry/{id}/download', {\n      params: {\n        path: {\n          id: item.id\n        }\n      }\n    });\n    setDownloaded(true);\n    setTimeout(() => setDownloaded(false), 1000);\n  };\n  const detail = <Space align='start'>\n      {/* Date */}\n      {item.pub_date ? <Tooltip position='right' content={item.pub_date.toLocaleString()}>\n          <Text size='small' type='tertiary'>\n            {format_time_relative(item.pub_date)}\n          </Text>\n        </Tooltip> : null}\n\n      {/* Sourcer */}\n      <Text type='tertiary' size='small'>\n        \u6765\u81EA\n        <Text size='inherit' weight={400} style={{\n        maxWidth: '15em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        marginLeft: '.2em'\n      }} link={item.link ? {\n        href: item.link,\n        target: '_blank'\n      } : undefined}>\n\n          {item.sourcer}\n        </Text>\n      </Text>\n    </Space>;\n  const episode = item.elements.EpisodeNumber ? <>\u7B2C{item.elements.EpisodeNumber}\u96C6</> : null;\n  const meta_text = <Text style={{\n    fontSize: '16px',\n    fontWeight: show_meta ? 300 : 500\n  }}>\n      <>\n        {show_meta && item.meta_id && <Text style={{\n        fontSize: 'inherit',\n        textDecoration: 'none',\n        fontWeight: 500,\n        marginRight: '.5em'\n      }} link={{\n        href: `/meta/${item.meta_id?.$oid}`\n      }}>\n\n            {item.meta_title}\n          </Text>}\n        {episode}\n      </>\n    </Text>;\n  const meta = item.meta_id && (is_xs ? meta_text : <Popover content={<MetaPreview id={item.meta_id?.$oid} />} trigger='hover'>\n\n        {meta_text}\n      </Popover>);\n  const title = <Text size={show_meta ? 'small' : 'normal'} link={{\n    href: `/entry/${item.id}`\n  }} style={{\n    wordWrap: 'break-word',\n    wordBreak: 'break-all',\n    cursor: item.link ? 'pointer' : 'default',\n    fontWeight: 400,\n    letterSpacing: '-0.5px',\n    '--semi-color-link': 'var(--semi-color-text-2)'\n  }}>\n\n      {item.group ? reactStringReplace(item.title, item.group, () => <Text size='inherit' style={{\n      color: 'rgba(var(--semi-teal-7))'\n    }}>\n              {item.group}\n            </Text>) : item.title}\n    </Text>;\n  const non_xs_buttons = <ButtonGroup>\n      <Tooltip content='\u590D\u5236\u94FE\u63A5'>\n        <Button theme='borderless' style={{\n        color: 'rgba(var(--semi-grey-3))'\n      }} icon={copied ? <IconCheckboxTick /> : <IconCopy />} onClick={copy} />\n\n      </Tooltip>\n      <Tooltip content='\u4E0B\u8F7D'>\n        <Button theme='borderless' icon={downloaded ? <IconCheckboxTick /> : <IconDownload />} onClick={download} />\n\n      </Tooltip>\n    </ButtonGroup>;\n  const xs_buttons = <ButtonGroup style={{\n    alignSelf: 'flex-end'\n  }}>\n      <Button theme='borderless' style={{\n      color: 'rgba(var(--semi-grey-3))'\n    }} icon={copied ? <IconCheckboxTick size='small' /> : <IconCopy size='small' />} onClick={copy}>\n\n        \u590D\u5236\n      </Button>\n      <Button theme='borderless' icon={downloaded ? <IconCheckboxTick size='small' /> : <IconDownload size='small' />} onClick={download}>\n\n        \u4E0B\u8F7D\n      </Button>\n    </ButtonGroup>;\n  return <List.Item style={{\n    width: '100%',\n    padding: '16px 0',\n    paddingTop: is_xs ? '24px' : undefined\n  }} main={<Space vertical align='start' className='entry-list-item' spacing='tight'>\n\n          {/* Date and Sourcer */}\n          {detail}\n\n          {/* Entry bangumi name */}\n          {meta}\n\n          {/* Title */}\n          {title}\n\n          {/* Buttons */}\n          {is_xs ? xs_buttons : null}\n        </Space>} extra={is_xs ? null : non_xs_buttons} />;\n}\n_s(EntryListItem, \"cdDaYpwC0g8zCI5bnmoODruLsyU=\", false, function () {\n  return [useClipboard, useClient];\n});\n_c = EntryListItem;\nvar _c;\n$RefreshReg$(_c, \"EntryListItem\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["format", "err", "escapeRegExp", "reactStringReplace", "text", "options", "useState", "isCopied", "setIsCopied", "successDuration", "useEffect", "id", "setTimeout", "clearTimeout", "didCopy", "copy", "useData", "_s", "import_react", "import_jsx_dev_runtime", "reactStringReplace", "_c"]
}
