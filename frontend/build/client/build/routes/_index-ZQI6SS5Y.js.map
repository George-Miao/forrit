{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx", "../../../app/components/meta_card/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1726381587782.9924\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { format_day, get_endpoint, group_by, parse_broadcast, sort_day } from '../util';\nimport { Col, Divider, Row, Typography } from '@douyinfe/semi-ui';\nimport MetaCard from 'app/components/meta_card';\nimport { useMetaSeason } from 'app/client';\nimport Loading from 'app/components/loading';\nimport WidthLimit from 'app/components/width_limit';\nimport PageHeader from 'app/components/page_header';\nexport const meta = () => {\n  return [{\n    title: 'New Remix App'\n  }, {\n    name: 'description',\n    content: 'Welcome to Remix!'\n  }];\n};\nexport const loader = async () => {\n  return json({\n    api: get_endpoint()\n  });\n};\nexport default function Index() {\n  return <Loading size='large' useData={useMetaSeason}>\n      {data => Loaded(data)}\n    </Loading>;\n}\n_c = Index;\nfunction Loaded(data) {\n  const bangumi = data.filter(m => !!m.tv && !!m.broadcast).map(m => ({\n    ...m,\n    parsed_broadcast: parse_broadcast(m.broadcast)\n  }));\n  const by_day = [...group_by(bangumi, m => m.parsed_broadcast.begin.getDay())].sort(([a], [b]) => sort_day(a, b));\n  return <>\n      <PageHeader routes={[{\n      href: '/',\n      name: '\u9996\u9875'\n    }, {\n      name: '\u672C\u5B63\u65B0\u756A'\n    }]}>\n        <Typography.Title type='secondary' style={{\n        margin: '2em 0 1em'\n      }}>\n          \u672C\u5B63\u65B0\u756A\n        </Typography.Title>\n      </PageHeader>\n      <WidthLimit maxWidth={230 * 6 + 20 * 5}>\n        {by_day.map(([day, bangumis]) => <>\n            <Row key={`header-${day}`}>\n              <Divider style={{\n            marginTop: '2em',\n            marginBottom: '3em'\n          }}>\n                <Typography.Title heading={4} style={{\n              margin: '0 1em'\n            }}>\n                  \u661F\u671F{format_day(day)}\n                </Typography.Title>\n              </Divider>\n            </Row>\n            <Row key={`content-${day}`} gutter={{\n          xs: 8,\n          sm: 12,\n          md: 20\n        }}>\n              {bangumis.sort((a, b) => +a.parsed_broadcast.begin - +b.parsed_broadcast.begin).map(meta => <Col key={meta._id.$oid} xs={12} md={8} lg={6} xxl={4} style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '1em'\n          }}>\n                    <MetaCard meta={meta} />\n                  </Col>)}\n            </Row>\n          </>)}\n      </WidthLimit>\n    </>;\n}\n_c2 = Loaded;\nvar _c, _c2;\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Loaded\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/meta_card/index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/meta_card/index.tsx\");\n}\n// REMIX HMR END\n\nimport { Card, Space, Typography } from '@douyinfe/semi-ui';\nimport { get_title, format_broadcast, parse_broadcast, use_is_xs } from 'app/util';\nimport \"./index.css?__remix_sideEffect__\";\nimport SubscribeButton from './subscription';\nconst xs_width = '47dvw - 8px';\nexport default function MetaCard({\n  meta\n}) {\n  const {\n    Text\n  } = Typography;\n  const is_xs = use_is_xs();\n  const [width, height] = is_xs ? [`calc(${xs_width})`, `calc(1.5 * (${xs_width}))`] : [230, 230 * 1.5];\n\n  // const useNumEntries = () => {\n  //   return map(hooks.useMetaEntries(meta._id.$oid), x => x.length)\n  // }\n\n  const cover = meta.tv?.poster_path ? <a tabIndex={0} style={{\n    width,\n    textDecoration: 'none',\n    cursor: 'pointer',\n    zIndex: 100\n  }} role='button' href={`/meta/${meta._id.$oid}`}>\n\n      <img alt='backdrop' style={{\n      width,\n      height\n    }} src={`https://image.tmdb.org/t/p/original/${meta.tv.poster_path}`} />\n\n    </a> : null;\n  const interval = meta.broadcast ? parse_broadcast(meta.broadcast) : {};\n  return <Card shadows='always' bordered={false} cover={cover} style={{\n    width,\n    cursor: 'unset'\n  }} bodyStyle={{\n    maxWidth: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'nowrap',\n    justifyContent: 'space-between',\n    padding: '15px'\n  }}>\n\n      <Card.Meta style={{\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }} title={<Text ellipsis={{\n      showTooltip: true\n    }}>{get_title(meta)}</Text>} description={<Space>\n            <Text type='secondary'>{format_broadcast(interval)}</Text>\n            {/* <Loading spin={false} size='small' useData={useNumEntries}>\n               {num => <Text type='secondary'>{num} \u4E2A\u8D44\u6E90</Text>}\n             </Loading> */}\n          </Space>} />\n\n\n      <SubscribeButton show_text={false} meta_id={meta._id.$oid} subscription={meta.subscription ?? null} />\n\n    </Card>;\n}\n_c = MetaCard;\nvar _c;\n$RefreshReg$(_c, \"MetaCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["meta", "import_jsx_dev_runtime", "_c", "meta", "_c2"]
}
